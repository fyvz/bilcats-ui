/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as pagesRouteRouteImport } from './routes/(pages)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as pagesChatIndexRouteImport } from './routes/(pages)/chat/index'

const pagesRouteRoute = pagesRouteRouteImport.update({
  id: '/(pages)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const pagesChatIndexRoute = pagesChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => pagesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof pagesRouteRouteWithChildren
  '/chat': typeof pagesChatIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof pagesRouteRouteWithChildren
  '/chat': typeof pagesChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(pages)': typeof pagesRouteRouteWithChildren
  '/(pages)/chat/': typeof pagesChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat'
  id: '__root__' | '/' | '/(pages)' | '/(pages)/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  pagesRouteRoute: typeof pagesRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(pages)': {
      id: '/(pages)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof pagesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(pages)/chat/': {
      id: '/(pages)/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof pagesChatIndexRouteImport
      parentRoute: typeof pagesRouteRoute
    }
  }
}

interface pagesRouteRouteChildren {
  pagesChatIndexRoute: typeof pagesChatIndexRoute
}

const pagesRouteRouteChildren: pagesRouteRouteChildren = {
  pagesChatIndexRoute: pagesChatIndexRoute,
}

const pagesRouteRouteWithChildren = pagesRouteRoute._addFileChildren(
  pagesRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  pagesRouteRoute: pagesRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
